library(randomForest)
MCMIS <- '/home/liujundi/Desktop/truck_crash/MCMIS/data'
setwd(MCMIS)
crash <- fread('OurCrash.csv', header = T, sep ="auto", sep2 = "auto")
summary(crash)
dotnumbers <- unique(crash$DOT_NUMBER)
injuries <- (crash$INJURIES)
fatalities <- (crash$FATALITIES)
severity <- (crash$SEVERITY_WEIGHT)
date <- (crash$REPORT_DATE)
t <- NULL
for (i in 1:length(date)){
t <- c(t, as.Date( strptime(date[i], "%m/%d/%Y")))
}
for (i in 1:length(date)){
t[i] <- t[i] - 16036
}
n <- NULL
label <- NULL
for (dotnumber in dotnumbers) {
n <- c(n, length(crash$INJURIES[crash$DOT_NUMBER == dotnumber]))
label <- c(label, dotnumber)
}
l <- data.frame(label,n)
l_order <- l[order(l[,2]),]
s <- 0
class_1 <- NULL
class_2 <- NULL
library(data.table)
MCMIS <- '/home/liujundi/Desktop/truck_crash/MCMIS/data'
setwd(MCMIS) #location of data
crash.master <- fread('OurCrash.csv', header = T, sep ="auto", sep2 = "auto")
library(randomForest)
MCMIS <- '/home/liujundi/Desktop/truck_crash/MCMIS/data'
setwd(MCMIS)
crash <- fread('OurCrash.csv', header = T, sep ="auto", sep2 = "auto")
summary(crash)
dotnumbers <- unique(crash$DOT_NUMBER)
injuries <- (crash$INJURIES)
fatalities <- (crash$FATALITIES)
severity <- (crash$SEVERITY_WEIGHT)
date <- (crash$REPORT_DATE)
t <- NULL
for (i in 1:length(date)){
t <- c(t, as.Date( strptime(date[i], "%m/%d/%Y")))
}
for (i in 1:length(date)){
t[i] <- t[i] - 16036
}
n <- NULL
label <- NULL
for (dotnumber in dotnumbers) {
n <- c(n, length(crash$INJURIES[crash$DOT_NUMBER == dotnumber]))
label <- c(label, dotnumber)
}
l <- data.frame(label,n)
l_order <- l[order(l[,2]),]
s <- 0
class_1 <- NULL
class_2 <- NULL
class_3 <- NULL
class_4 <- NULL
class_5 <- NULL
for (j in 1:90480){
s <- s + l_order$n[j]
if (s<=45172){
class_1 <- c(class_1, l_order$label[j])
} else if (s>45172 && s<=90345) {
class_2 <- c(class_2, l_order$label[j])
} else if (s>90345 && s<=135517) {
class_3 <- c(class_3, l_order$label[j])
} else if (s>135517 && s<=180690) {
class_4 <- c(class_4, l_order$label[j])
} else if (s>180690 && s<=225863) {
class_5 <- c(class_5, l_order$label[j])
}
}
d <- (crash$DOT_NUMBER)
target <- NULL
for (i in 1:length(d)) {
if (d[i] %in% class_1) {
target <- c(target, 0)
} else if (d[i] %in% class_2) {
target <- c(target, 1)
} else if (d[i] %in% class_3) {
target <- c(target, 2)
} else if (d[i] %in% class_4) {
target <- c(target, 3)
} else if (d[i] %in% class_5) {
target <- c(target, 4)
}
}
dot <- data.frame(injuries, fatalities, t, target)
training = dot
ind <- sample(2, 10000, replace = FALSE, prob = c(0.7, 0.3))
training = dot
ind <- sample(2, 1000, replace = TRUE, prob = c(0.7, 0.3))
traindata <- training[ind==1,]
testdata <- training[ind==2,]
dot.rf <- randomForest(target~., data = traindata, ntree = 20, proximity = TRUE)
install.packages("DMwR")
install.packages("nnet")
library(nnet)
library(DMwR)
training = dot
ind <- sample(2, 1000, replace = TRUE, prob = c(0.7, 0.3))
traindata <- training[ind==1,]
testdata <- training[ind==2,]
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 1000, trace = F, data = traindata)
pre.forest <- predict(model.nnet, testdata, type = 'class')
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 1000, trace = F, data = traindata)
pre.forest <- predict.nnet(model.nnet, testdata, type = 'class')
detach(nnet)
detach(package:"nnet")
detach(package:nnet)
library(randomForest)
dot.rf <- randomForest(target~., data = traindata, ntree = 20, proximity = TRUE)
dot.pred = predict(dot.rf, testdata)
table(observed=dot[ind==2,"target"],predicted = dot.pred)
detach(package:)
detach(package:randomForest)
library(nnet)
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 1000, trace = F, data = traindata)
pre.forest <- predict.nnet(model.nnet, testdata, type = 'class')
pre.forest <- predict(model.nnet, testdata, type = 'class')
pre.forest <- predict(model.nnet, testdata, type = 'raw')
table(pre.forest, testdata$target)
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 1000, trace = F, data = traindata)
pre.forest <- predict(model.nnet, traindata, type = 'raw')
table(pre.forest, testdata$target)
pre.forest <- predict(model.nnet, traindata, type = 'raw')
table(pre.forest, traindata$target)
result <- table(pre.forest, traindata$target)
install.packages("e1071")
training = dot
ind <- sample(2, 100, replace = TRUE, prob = c(0.7, 0.3))
traindata <- training[ind==1,]
testdata <- training[ind==2,]
View(testdata)
dot <- data.frame(injuries, fatalities, t, target)
training = dot
ind <- sample(2, 100, replace = TRUE, prob = c(0.7, 0.3))
traindata <- training[ind==1,]
testdata <- training[ind==2,]
library(nnet)
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 100, trace = F, data = traindata)
pre.forest <- predict(model.nnet, traindata, type = 'raw')
result <- table(pre.forest, traindata$target)
detach(package:nnet)
result
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 100, trace = F, data = traindata)
library(nnet)
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 100, trace = F, data = traindata)
pre.forest <- predict(model.nnet, traindata, type = 'class')
training = dot
ind <- sample(2, nrow(dot), replace = TRUE, prob = c(0.7, 0.3))
traindata <- training[ind==1,]
testdata <- training[ind==2,]
library(nnet)
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 100, trace = F, data = traindata)
pre.forest <- predict(model.nnet, traindata, type = 'class')
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 100, trace = F, data = traindata)
pre.forest <- predict(model.nnet, traindata, type = 'raw')
result <- table(pre.forest, traindata$target)
detach(package:nnet)
result
library(randomForest)
dot.rf <- randomForest(target~., data = traindata, ntree = 20, proximity = TRUE)
testdata <- training[ind==2,]
train <- sample(traindata, 700, replace = FALSE)
train <- sample(x = traindata, size = 700, replace = FALSE)
x=1:10
x
sample(x,5)
sample(traindata,5)
train <- traindate[sample(1:nrow(traindata), size = 700, replace = FALSE)]
train <- traindata[sample(1:nrow(traindata), size = 700, replace = FALSE)]
traindata[1]
train <- traindata[sample(1:nrow(traindata), size = 700, replace = FALSE),]
test <- testdata[sample(1:nrow(testdata), size = 300, replace = FALSE),]
library(randomForest)
dot.rf <- randomForest(target~., data = train, ntree = 10, proximity = TRUE)
dot.pred = predict(dot.rf, test)
table(observed=dot[ind==2,"target"],predicted = dot.pred)
test["target"]
library(randomForest)
dot.rf <- randomForest(target~., data = train, ntree = 10, proximity = TRUE)
dot.pred = predict(dot.rf, test)
table(observed=test["target"],predicted = dot.pred)
dot.rf <- randomForest(target~., data = train, ntree = 10, proximity = TRUE)
dot.pred = predict(dot.rf, test)
table(observed=test$target,predicted = dot.pred)
detach(package:randomForest)
library(nnet)
model.nnet <- nnet(target~., lineout = F, size = 10, decay = 0.01, maxit = 100, trace = F, data = train)
pre.forest <- predict(model.nnet, test, type = 'class')
save.image("~/Desktop/truck_crash/MCMIS/data/history.RData")
load("~/Desktop/truck_crash/MCMIS/data/history.RData")
